import { Binary } from '@angular/compiler';
import { UserRoleModel } from '../user-models/user-role.model';
import { HrEmpdocument } from '../user-models/HrEmpdocument';

export class User {
  /**
   *
   */
  constructor() {
    // this.UserId=0;
    // this.UserUid ='';
    // this.SecurityQuestion ='';
    // this.SecurityAnswer ='';

  }
    UserId!: number;
    UserUid!: string;
    UserName: string;
    IsRadiographer?: boolean;
    SecurityQuestion: string;
    SecurityAnswer: string;
    Pwd?: string;
    UnitId!: number;
    JobtitleId!: number;
    JobType!: string;
    JobTypeId!: number;
    JobTypeLevelId!: number;
    JobTypeName!: string;
    TitleNls!: string;
    FnameNls!: string;
    MnameNls!: string;
    LnameNls!: string;
    TitleEng!: string;
    FnameEng!: string;
    MnameEng!: string;
    LnameEng!: string;
    AliasName!: string;
    Gender!: string;
    EmailPersonal!: string;
    EmailOfficial!: string;
    PhoneHome!: string;
    PhoneMobile!: string;
    PhoneOffice!: string;
    PreferredPhone!: string;
    PabxExt!: number;
    FaxNo!: string;
    Dob!: Date;
    BloodGroup!: string;
    Address!: string;
    DefaultLang!: number;
    Religion!: number;
    AuthLevelId!: number;
    ReportingTo!: number;
    LastPwdModified!: Date;
    CardNo!: string;
    PlaceOfBirth!: string;
    Nationality!: string;
    MStatus!: string;
    IsActive!: boolean;
    SupportUser!: boolean;
    CanKillSession!: boolean;
    AllowOthersToFinalize!: boolean;
    CanExceedSchedule!: boolean;
    ImgFileName!: string;
    EmpReportFooter1!: string;
    EmpReportFooter2!: string;
    Themes!: string;
    MenuLayout!: string;
    ProfileLayout!: string;
    IsCompact!: boolean;
    IsGuest!: boolean;
    OrgId!: number;
    AppCustomerID!: number;
    CreatedBy!: number;
    CreatedOn!: Date;
    LastModifiedBy!: number;
    LastModifiedOn!: Date;
    PwdHash!: Binary;
    PwdSalt!: Binary;
    TimeZoneId!: string;
    IsAutoRefresh!: boolean;
    RefreshTime!: number;
    OldPwd!: string;
    IsLineGroupAdded?: boolean;
    OrgName!: string;
    EmailActivationCode!: string;
    EmailVerificationExpDatetime!: Date;
    IsEmailVerified!: boolean;
    PwResetExpDatetime!: Date;
    PwResetDatetime!: Date;
    ResetPwCode!: string;
    Host!: string;
    Port!: string;
    Scheme!: string;
    EmpId!: number;
    Fname!: string;
    Lname!: string;
    FullNameText!: string;
    FullName!: string;
    Status!: string;
    IsSuperAdmin!: boolean;
    WorkListType!: string;
    IsImmediateReportWrite?: boolean;
    WorklistOrder!: string;
    SignatureFileName!: string;
    SkipEmailVerification!: boolean;
    Rolls!: UserRoleModel[];
    Password!: string;
    AIType!: string;
    OrgType!: string;
    OrgParentId?: number;
    LineAccessToken!: string;
    LineUserName!: string;
    LineId!: string;
    MedicalLincence!: string;
    CountryId?: number;
    ProvinceId?: number;
    DistrictId?: number;
    SubdistrictId?: number;
    PostalCodeId?: number;
    ZipCode!: string;
    HospitalIds!: any[];
    HrEmpsubspecialty!: any[];
    IsPhoneVerified!: boolean;
    StudyAssignAllow!: boolean;
    StudyUnAssignAllow!: boolean;
    StudyDraftAllow!: boolean;
    StudyFinalizeAllow!: boolean;
    StudyAddendumAllow!: boolean;
    StudyResetAllow!: boolean;
    StudyResetWindowHour!: number;
    StudyAssignAllowOthers?: boolean;
    StudyUnAssignAllowOthers?: boolean;
    StudyResetAllowOthers?: boolean;
    IsImaging!: boolean;
    IsReferring!: boolean;
    IsOwnerMandatory?: boolean;
    PhoneMobileCode!: string;
    Is2faenable?: boolean;
    TotpSecretkey!: string;
    TotpEnableon?: Date;
    TotpDisableon?: Date;
    TotpDisablereason!: string;
    TotpVerifyCode!: string;
    BackupCode!: string;
    IsTotpSecretkeyExits!: boolean;

    IsSsnmandatory!: boolean;
    IsStudyautosubmit!: boolean;
    
  hrEmpdocuments: HrEmpdocument[] = [];
}
